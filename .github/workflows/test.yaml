name: End-to-End Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-runner:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build TypeScript
        run: pnpm run build

      - name: Start server & worker in background
        run: |
          nohup node dist/server/index.js > server.log 2>&1 &
          nohup env AGENT_TARGET=emulator node dist/server/worker.js > worker.log 2>&1 &
          sleep 5

      - name: Submit test via CLI
        id: submit
        run: |
          JOB_ID=$(node dist/cli/index.js submit --org-id=qualgent --app-version-id=abc123 --test=tests/sample.spec.js --target=emulator | grep -oE '[0-9a-zA-Z-]+$')
          echo "Extracted JOB_ID: $JOB_ID"
          echo "job_id=$JOB_ID" >> $GITHUB_OUTPUT

      - name: Poll job status
        run: |
          job_id=${{ steps.submit.outputs.job_id }}
          echo "Polling job ID: $job_id"
          for i in {1..10}; do
          RESPONSE=$(curl -s "http://localhost:3000/status?id=$job_id&target=emulator")
          echo "Attempt $i: Response = $RESPONSE"
          STATUS=$(echo "$RESPONSE" | jq -r '.state')
          echo "Attempt $i: Job status = $STATUS"
          if [[ "$STATUS" == "completed" ]]; then exit 0; fi
          if [[ "$STATUS" == "failed" ]]; then exit 1; fi
          sleep 3
          done
          echo "Timed out waiting for job to complete"
          exit 1